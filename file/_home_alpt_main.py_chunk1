t['swagger_js_url'].replace('https://cdn.jsdelivr.net/npm/', 'https://unpkg.com/')
    swagger_css_url = param_dict['swagger_css_url'].replace('https://cdn.jsdelivr.net/npm/', 'https://unpkg.com/')
    return get_swagger_ui_html(
        *args, **kwargs,
        swagger_js_url=swagger_js_url,
        swagger_css_url=swagger_css_url
    )



applications.get_swagger_ui_html  = swagger_monkey_patch

app = FastAPI()




@app.get("/")
def read_root():
    return {"Hello": "World"}


@app.get("/text2music")
async def addUser(prompt:str):
    wav = model.generate([prompt]).cpu()
    print(wav.shape)

    # 假设tensor_np是一个单通道的音频数据
    # 如果是多通道数据，请确保tensor_np的shape是正确的
    # 创建一个临时文件用于存储wav文件
    with tempfile.NamedTemporaryFile(suffix=".wav", mode='w+t',delete=False) as f:
        print(f.name)
        scipy.io.wavfile.write(f.name, rate=32000, data=wav[0, 0].numpy())
        print(f.name)
        # 返回wav文件作为响应
   